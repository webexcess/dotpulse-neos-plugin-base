@mixin grid-col-autowidth($breakpoints) {
	@if $breakpoints {
		@each $breakpoint in $breakpoints {
			@include media-breakpoint-up($breakpoint) {
				#{$grid-selector}col-#{$breakpoint} {
					flex-grow: 1;
					flex-basis: 0;
					max-width: 100%;
				}
			}
		}
	}
}

@mixin grid-col-autowidth-min($breakpoints) {
	@if $breakpoints {
		@each $breakpoint in $breakpoints {
			@include media-breakpoint-up($breakpoint) {
				#{$grid-selector}col-#{$breakpoint}-min {
					flex-shrink: 1;
					flex-basis: auto;
					max-width: 100%;
				}
			}
		}
	}
}

@mixin grid-direction($breakpoint, $direction) {
	@if $direction {
		@include media-breakpoint-up($breakpoint) {
			@each $i in $direction {
				#{$grid-selector}#{$i}-#{$breakpoint} {
					flex-direction: #{$i};
				}
			}
		}
	}
}

@mixin col($breakpoint, $grid, $columns: $grid-columns) {
	@if $grid {
		@each $i in $grid {
			#{$grid-selector}col-#{$breakpoint}-#{$i} {
				@include media-breakpoint-up($breakpoint) {
					flex: 0 0 percentage($i / $columns);
					max-width: percentage($i / $columns);
				}
			}
		}
	}
}


@mixin row-align($breakpoint, $align) {
	// align: start, center, end, top, middle, bottom, around, between
	@if $align {
		@include media-breakpoint-up($breakpoint) {
			@each $i in $align {
				@if $i == 'top' {
					#{$grid-selector}row-#{$breakpoint}-top {
						align-items: flex-start;
					}
				} @else if $i == 'middle' {
					#{$grid-selector}row-#{$breakpoint}-middle {
						align-items: center;
					}
				} @else if $i == 'bottom' {
					#{$grid-selector}row-#{$breakpoint}-bottom {
						align-items: flex-end;
					}
				} @else if $i == 'start' or $i == 'end' {
					#{$grid-selector}row-#{$breakpoint}-#{$i} {
						justify-content: flex-#{$i};
					}
				} @else if $i == 'center' {
					#{$grid-selector}row-#{$breakpoint}-center {
						justify-content: center;
						text-align: center;
					}
				} @else if $i == 'around' or $i == 'between' {
					#{$grid-selector}row-#{$breakpoint}-#{$i} {
						justify-content: space-#{$i};
					}
				}
			}
		}
	}
}

@mixin col-align($breakpoint, $align) {
	// align: start, center, end, stretch
	@if $align {
		@include media-breakpoint-up($breakpoint) {
			@each $i in $align {
				@if $i == 'top' or $i == 'start' {
					#{$grid-selector}col-#{$breakpoint}-top {
						align-self: flex-start;
					}
				} @else if $i == 'center' or $i == 'middle' {
					#{$grid-selector}col-#{$breakpoint}-#{$i} {
						align-self: center;
					}
				} @else if $i == 'bottom' or $i == 'end' {
					#{$grid-selector}col-#{$breakpoint}-end {
						align-self: flex-end;
					}
				}
			}
		}
	}
}

@mixin col-order($breakpoint, $order) {
	@if $order {
		@include media-breakpoint-up($breakpoint) {
			@each $i in $order {
				@if $i == 'first' {
					#{$grid-selector}col-#{$breakpoint}-first {
						order: -1;
					}
				} @else if $i == 'last' {
					#{$grid-selector}col-#{$breakpoint}-last {
						order: 1;
					}
				}
			}
		}
	}
}

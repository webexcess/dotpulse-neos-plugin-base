prototype(TYPO3.Neos.NodeTypes:Image) {
	attributes {
		class = TYPO3.TypoScript:RawArray {
			bleed = ${q(node).property('bleed') ? 'typo3-neos-nodetypes-image-bleed' : false}
			container = ${container && q(node).property('bleed') != true ? baseConfiguration.Container.Image : false}
		}
	}

	@context.maximumWidth = ${q(node).property('maximumWidth')}
	maximumWidth = ${maximumWidth ? maximumWidth : this.baseConfiguration.Image.maximumWidth}
	style = TYPO3.TypoScript:Array {
		maxWidth = ${maximumWidth ? 'max-width:' + maximumWidth + 'px;' : false}
	}


	title = ${Dotpulse.Base.AssetTranslation.translate(q(node).property('image').title, node)}
	alternativeText = ${q(node).property('alternativeText') ? q(node).property('alternativeText') : Dotpulse.Base.AssetTranslation.translate(q(node).property('image').caption, node)}
	imageClassName = TYPO3.TypoScript:Array {
		shape = ${q(node).property('shape') ? q(node).property('shape') : false}
		lazyLoad = ${baseConfiguration.Source.LazyLoading ? 'load' : false}
	}

	link.@process.convertUris = TYPO3.Neos:ConvertUris {
		forceConversion = true
	}

	image = ${q(node).property('image')}
	lightbox = ${q(node).property('lightbox') && this.image}
	lighboxImage = ${(this.baseConfiguration.Image.openOriginalImageInLightbox && this.image.originalAsset) ? this.image.originalAsset : this.image}
	@if.hasImage = ${this.image || node.context.inBackend}
}

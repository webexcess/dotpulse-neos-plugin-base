prototype(Neos.NodeTypes:TextWithImage) {
	templatePath = 'resource://Dotpulse.Base/Private/Templates/NodeTypes/TextWithImage.html'

	alignmentProperty = ${q(node).property('alignment') ? q(node).property('alignment') : this.baseConfiguration.TextWithImage.defaultAlignment}
	alignment = ${(this.baseConfiguration.TextWithImage.style == 'Float' && (this.alignmentProperty == 'left' || this.alignmentProperty == 'right')) ?  'float-' + this.alignmentProperty : this.alignmentProperty}
	@context.alignment = ${this.alignment}

	imageFirst = ${(this.alignment == 'top' || this.alignment == 'float-left' || this.alignment == 'float-right') ? true : false}

	needRow = ${(this.alignment == 'left' || this.alignment == 'right') && this.container ? true : false}
	colClasses = ${q(node).parent().parent().is(this.baseConfiguration.Container.Filter) ? this.baseConfiguration.TextWithImage.firstlevel[this.alignment] : this.baseConfiguration.TextWithImage.nested[this.alignment]}

	attributes.class = Neos.Fusion:RawArray {
		container = ${container ? baseConfiguration.Container.TextWithImage : false}
		row = ${container ? false : alignment == 'left' || alignment == 'right' ? baseConfiguration.TextWithImage.rowClass : false}
		alignment = ${'pos-' + alignment}
	}

	@context.maximumWidth = ${q(node).property('maximumWidth')}
	maximumWidth = ${maximumWidth ? maximumWidth : this.baseConfiguration.TextWithImage.maximumWidth}
	style = Neos.Fusion:Array {
		maxWidth = ${maximumWidth ? 'max-width:' + maximumWidth + 'px;' : false}
	}

	attributesRow = Neos.Fusion:Attributes {
		class = Neos.Fusion:RawArray {
			row = ${baseConfiguration.TextWithImage.rowClass}
		}
	}
	@if.hasImage = true
}

prototype(Neos:Page) {
	@context.rawContent = ${node.context.currentRenderingMode.name == 'rawContent' ? true : false}

	htmlTag.attributes {
		@context.config = ${Configuration.setting('Dotpulse.Base.Source')}
		data-version = ${config.VersionOfAssets}
		data-jq = ${config.jQuery.printInHead ? config.jQuery.new : false}
		data-jq-old = ${config.SupportIE8 && config.jQuery.printInHead ? config.jQuery.old : false}
		class = TypoScript:RawArray {
			live = ${node.context.inBackend ? 'inBackend' : 'live'}
			javascript = 'no-js'
		}
	}

	bodyTag.attributes {
		data-neos-node = ${node.contextPath}
		id = ${q(site).get(0) == q(node).get(0) ? 'level-index' : 'level-' + q(node).parents().count() + '-' + q(node).property('uriPathSegment')}
		class = TypoScript:RawArray {
			subpages = ${q(node).parents().is() && q(node).children('[instanceof TYPO3.Neos:Document]').filter('[_hiddenInIndex=false]').is() ? 'has-subpages' : false}
			level = ${'level-' + q(node).parents().count()}
		}
	}

	body {
		baseConfiguration = ${Configuration.setting('Dotpulse.Base')}
		@context.baseConfiguration = ${this.baseConfiguration}
		partialRootPath = 'resource://Dotpulse.Base/Private/Partials'

		mainAttributes = TypoScript:Attributes {
			id = ${rawContent ? 'neos-raw-content-container' : 'top'}
			class = TypoScript:RawArray {
				level = ${'level-' + q(node).parents().count()}
			}
		}

		GoogleTagManager = TypoScript:Template {
			templatePath = 'resource://Dotpulse.Base/Private/Partials/GoogleTagManager.html'
			GoogleTagManager = ${baseConfiguration.Source.GoogleTagManager}
			@if.isLive = ${node.context.live}
			@if.isNotBlank = ${!String.isBlank(this.GoogleTagManager)}
		}
		@process.PrependGoogleTagManager = ${this.GoogleTagManager + value}

		GoogleAnalytics  = TypoScript:Template {
			templatePath = 'resource://Dotpulse.Base/Private/Partials/GoogleAnalytics.html'
			GoogleAnalytics = ${baseConfiguration.Source.GoogleAnalytics}
			SendPageview = ${baseConfiguration.Source.GoogleAnalyticsSendPageview}
			@if.isLive = ${node.context.live}
			@if.isNotBlank = ${!String.isBlank(this.GoogleAnalytics)}
		}
		@process.PrependGoogleAnalytics = ${this.GoogleAnalytics + value}
		@context.VersionOfAssets = ${baseConfiguration.Source.VersionOfAssets ? '?v=' + baseConfiguration.Source.VersionOfAssets : ''}
		javascripts {
			jQuery = Base:jQuery
			General = Base:JSCollection {
				collection = ${String.split(baseConfiguration.Source.General.BodyJavascript, ',')}
				@if.isNotRaw = ${rawContent ? false : true}
			}
			Backend = Base:JSCollection {
				collection = ${String.split(baseConfiguration.Source.Backend.BodyJavascript, ',')}
				@if.isBackend = ${node.context.inBackend}
				@if.isNotRaw = ${rawContent ? false : true}
			}
			Live = Base:JSCollection {
				collection = ${String.split(baseConfiguration.Source.Live.BodyJavascript, ',')}
				@if.isLive = ${!node.context.inBackend}
				@if.isNotRaw = ${rawContent ? false : true}
			}
			RawContent = Base:JSCollection {
				collection = ${String.split(baseConfiguration.Source.RawContent.BodyJavascript, ',')}
				@if.isRaw = ${rawContent}
			}
		}
	}

	lastVisitedNodeScript >
	lastVisitedNodeScript = TypoScript:Tag {
		@position = 'before closingBodyTag'
		tagName = 'script'
		content = 'try{lastVisitedNode();}catch(e){}'
		attributes {
			type = 'text/javascript'
		}
	}
}
